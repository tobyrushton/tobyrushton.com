---
import type { MarkdownInstance } from 'astro'
import type { InferGetStaticPropsType } from 'astro'
import { Github, Home } from 'lucide-astro'
import Link from '../../components/link.astro'
import dayjs from 'dayjs'
import Layout from '../../layouts/Layout.astro'

export const getStaticPaths = async () => {
    const posts: MarkdownInstance<Record<string, string>>[] = await Astro.glob("../../posts/*.md")

    return posts.map(post => ({
        params: {
            post_id: post.frontmatter.slug
        },
        props: {
            post
        }
    }))
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { post } = Astro.props
---
<Layout title={post.frontmatter.title} description={post.frontmatter.description}>
    <div class="flex flex-col md:items-center p-6 *:max-w-3xl">
        <span class="flex justify-between w-full *:hover:">
            <Link 
                href="/"
                blank={false}
                alt="Link to home page"
            >
                <Home />
            </Link>
            <Link 
                href="https://github.com/tobyrushton"
                alt="Link to github profile"
            >
                <Github />
            </Link>
        </span>
        <h1 class="text-4xl font-bold mt-6 w-full">{post.frontmatter.title}</h1>
        <p class="text-lg text-text-secondary mt-2 w-full">{dayjs(post.frontmatter.date).format('MMMM D, YYYY')}</p>
        <div id="md" class="mt-4">
            <post.Content />
        </div>
    </div>
</Layout>

<style lang="postcss">
    :global(#md h2) {
        @apply mt-16 text-3xl font-semibold;
    }
    :global(#md h3) {
        @apply mt-8 text-2xl font-medium;
    }
    :global(#md h4) {
        @apply mt-6 text-xl font-medium;
    }
	:global(#md h5) {
        @apply mt-4 text-lg font-medium;
    }
    :global(#md > p) {
        @apply mt-4 ;
    }
    :global(#md ol) {
        @apply mt-4 list-decimal list-inside;
    }
	:global(#md ul) {
        @apply mt-4 list-disc list-inside ;
    }
    :global(#md blockquote) {
        @apply text-zinc-400 mt-4 border-l-2 border-zinc-300 pl-4 text-base;
    }
    :global(#md a) {
        @apply underline hover:text-black;
    }
    :global(#md p code, #md ul code, #md ol code) {
		@apply text-base;
	}
	:global(#md table code) {
		@apply text-sm;
	}
	:global(#md .astro-code) {
		@apply !bg-fg mt-4 overflow-scroll rounded-lg px-4 py-3 !leading-tight;
		scrollbar-width: none;
	}
	:global(#md .astro-code span) {
		@apply !text-sm;
	}
	:global(#md pre::-webkit-scrollbar) {
		display: none;
	}
    :global(#md table) {
		@apply mt-6 mb-2 w-full table-auto border-collapse text-left text-sm;
	}
	:global(#md .table-wrapper) {
		@apply w-full overflow-auto whitespace-nowrap;
	}
	:global(#md td) {
		@apply border-b border-zinc-200 py-1.5 px-1;
	}
	:global(#md table th) {
		@apply text-xs font-medium py-1.5 px-1 border-b border-zinc-400;
	}
	:global(#md p > code) {
		@apply text-sm;
	}
	:root {
		--astro-code-color-background: rgb(246, 246, 246);
		--astro-code-token-string-expression: rgb(97, 97 ,255);
		--astro-code-token-comment: rgb(157, 157, 157);
	}
</style>